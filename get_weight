//Пример вызова функции взвешивания
//
&НаКлиенте
Процедура Взвесить(Команда)
	
	ДанныеВзвешивания = Новый Структура;
	ДанныеВзвешивания.Вставить("reader"         , Строка(Новый УникальныйИдентификатор));    //GUID документа ТТН
	ДанныеВзвешивания.Вставить("truck"          , "АВ0043СЕ");								 //Номер автомобиля
	ДанныеВзвешивания.Вставить("driver"         , "Нешик І. В.");						     //ФИО водителя
	ДанныеВзвешивания.Вставить("item_name"      , "Кукурудза 3 класс");                      //Наименование груза (номенклатура)
	ДанныеВзвешивания.Вставить("operation_name" , "Надходження авто");                       //Наименование вида операции
	
	ИдентификаторВесов = "5"; //Порядковый номер подключенных весов от 1 до 99
	
	ПолучитьВес("/api/platform",ИдентификаторВесов,ДанныеВзвешивания);
	
КонецПроцедуры

// Получает вес
//
Функция ПолучитьВес(БазовыйАдресРесурса, ИдентификаторВесов, ДанныеВзвешивания)

	Сервер = "176.9.9.112";
	Порт   = 4000;
	Логин  = "user";
	Пароль = "user";
	ЗащищенноеСоединение = Ложь;
	
	ДанныеПодключения = ПодключитьсяКУстройству(Сервер,Порт,Логин,Пароль,ЗащищенноеСоединение);
	
	ИмяМетода = "/getWeight";
	ИмяМетода = ИмяМетода+"?reader=%1&truck=%2&driver=%3&item_name=%4&operation_name=%5";
	ИмяМетода = СтрШаблон(ИмяМетода,
							ДанныеВзвешивания.reader,
							ДанныеВзвешивания.truck,
							ДанныеВзвешивания.driver,
							ДанныеВзвешивания.item_name,
							ДанныеВзвешивания.operation_name);
							
	ТелоОтвета = ВыполнитьЗапрос(БазовыйАдресРесурса+ИмяМетода+ИдентификаторВесов, ДанныеПодключения.Соединение, ДанныеПодключения.Токен);
	
	ЧтениеJSON   = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
	ТелоОтветаСтруктура = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Вес                    = ТелоОтветаСтруктура.weight;
	ПересеченПериметр      = ТелоОтветаСтруктура.perimetr;
	СтабильностьВеса       = ТелоОтветаСтруктура.stable;
	Статус                 = ТелоОтветаСтруктура.status;
	ВремяНахожденияНаВесах = Окр(ТелоОтветаСтруктура.duration/60000,1);
	ВодительВКабине        = ТелоОтветаСтруктура.driverInCar;

КонецФункции // ПолучитьВес()
//Подключается к устройству, получает токен для валидации будущих запросов в контексте текущего соединения
//
Функция ПодключитьсяКУстройству(Сервер, Порт, Логин, Пароль, ЗащищенноеСоединение = Истина, Таймаут = 10)
	
	Результат = Новый Структура("Соединение, Подключен, Токен, ТекстОшибки", Неопределено, Ложь,"","");
	
	//Авторизация
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	Данные = Новый Структура("username, password", Логин, Пароль);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	
	strJSON = ЗаписьJSON.Закрыть();
	URL = "/auth/login";
	
	Если ЗащищенноеСоединение Тогда
		ЗС = Новый ЗащищенноеСоединениеOpenSSL;
		HTTPСоединение = Новый HTTPСоединение(Сервер, Порт,,,,Таймаут, ЗС);
	Иначе
		HTTPСоединение = Новый HTTPСоединение(Сервер, Порт,,,,Таймаут);
	КонецЕсли;
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", "application/json");
	
	HTTPЗапрос = Новый HTTPЗапрос(URL, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(strJSON, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	//После авторизации получаем токен для дальнейшего доступа.
	//Токен живет до тех пор, пока на granary.pulse включено питание.
	HTTPОтвет    = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
    	КодСостояния = HTTPОтвет.КодСостояния;
	Если КодСостояния = 200 Тогда
		
		ТекстОтвета  = HTTPОтвет.ПолучитьТелоКакСтроку();	
		ЧтениеJSON   = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
		ДанныеОтвета = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		Результат.Токен      = ДанныеОтвета.token;
		Результат.Подключен  = Истина;
		Результат.Соединение = HTTPСоединение;
	
	Иначе
		
		Результат.Подключен   = Ложь;
		Результат.ТекстОшибки = НСтр("ru = 'Ошибка авторизации'; uk = 'Помилка авторизації'");
		
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

// Выполняет запрос к серверу
//
Функция ВыполнитьЗапрос(ПутьКЗапросу, СоединениеССервером, ТокенСоединения)
	
	Если ПустаяСтрока(ПутьКЗапросу) Тогда
		Возврат "";
	КонецЕсли;
		
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-type", "application/json");
	Заголовки.Вставить("token", ТокенСоединения);

	HTTPЗапрос = Новый HTTPЗапрос(ПутьКЗапросу,Заголовки);
	
	Ответ       = СоединениеССервером.ВызватьHTTPМетод("GET",HTTPЗапрос);
	
	Возврат Ответ.ПолучитьТелоКакСТроку();
	
КонецФункции


